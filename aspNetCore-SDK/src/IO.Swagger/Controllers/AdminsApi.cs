/*
 * Accounts API
 *
 * Accounts API
 *
 * OpenAPI spec version: 1.0.4
 * Contact: you@your-company.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;

using Microsoft.AspNetCore.Authorization;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class AdminsApiController : ControllerBase
    { 
        /// <summary>
        /// adds an accounts item
        /// </summary>
        /// <remarks>Adds an item to the system</remarks>
        /// <param name="accountsItem">accounts item to add</param>
        /// <response code="201">item created</response>
        /// <response code="400">invalid input, object invalid</response>
        /// <response code="409">an existing item already exists</response>
        [HttpPost]
        [Route("/MConneely/AccountsAPI/1.0.4/accounts")]
        [ValidateModelState]
        [SwaggerOperation("Addaccounts")]
        [SwaggerResponse(statusCode: 201, type: typeof(List<AccountsItem>), description: "item created")]
        public virtual IActionResult Addaccounts([FromBody]AccountsItem accountsItem)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(List<AccountsItem>));

            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            //TODO: Uncomment the next line to return response 409 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(409);

            string exampleJson = null;
            exampleJson = "{}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<AccountsItem>>(exampleJson)
            : default(List<AccountsItem>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
